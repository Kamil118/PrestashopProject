<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit969719f50df2f511b1dd32721db28257
=======
class ComposerAutoloaderInit543664f9d9a395f7e557201e21f89a67
>>>>>>> origin/main
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit969719f50df2f511b1dd32721db28257', 'loadClassLoader'), true, false);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit969719f50df2f511b1dd32721db28257', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit543664f9d9a395f7e557201e21f89a67', 'loadClassLoader'), true, false);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit543664f9d9a395f7e557201e21f89a67', 'loadClassLoader'));
>>>>>>> origin/main

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInit969719f50df2f511b1dd32721db28257::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInit543664f9d9a395f7e557201e21f89a67::getInitializer($loader));
>>>>>>> origin/main
        } else {
            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->setClassMapAuthoritative(true);
        $loader->register(false);

        return $loader;
    }
}
