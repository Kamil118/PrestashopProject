<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit1142a1a79be0d79226d26be33b07d67b
=======
class ComposerAutoloaderInit8a1cc0cfe3092e8af8795809c84a4fc9
>>>>>>> origin/main
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit1142a1a79be0d79226d26be33b07d67b', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit1142a1a79be0d79226d26be33b07d67b', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit8a1cc0cfe3092e8af8795809c84a4fc9', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit8a1cc0cfe3092e8af8795809c84a4fc9', 'loadClassLoader'));
>>>>>>> origin/main

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInit1142a1a79be0d79226d26be33b07d67b::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInit8a1cc0cfe3092e8af8795809c84a4fc9::getInitializer($loader));
>>>>>>> origin/main
        } else {
            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->setClassMapAuthoritative(true);
        $loader->register(true);

        return $loader;
    }
}
